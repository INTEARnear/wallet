import{h as f,j as u,n as c}from"./chunk-KGCAX4NX.js";f();c();u();f();c();u();var i=typeof globalThis=="object"&&"crypto"in globalThis?globalThis.crypto:void 0;f();c();u();function d(t){if(!Number.isSafeInteger(t)||t<0)throw new Error("positive integer expected, got "+t)}function x(t){return t instanceof Uint8Array||ArrayBuffer.isView(t)&&t.constructor.name==="Uint8Array"}function s(t,...e){if(!x(t))throw new Error("Uint8Array expected");if(e.length>0&&!e.includes(t.length))throw new Error("Uint8Array expected of length "+e+", got length="+t.length)}function B(t){if(typeof t!="function"||typeof t.create!="function")throw new Error("Hash should be wrapped by utils.wrapConstructor");d(t.outputLen),d(t.blockLen)}function U(t,e=!0){if(t.destroyed)throw new Error("Hash instance has been destroyed");if(e&&t.finished)throw new Error("Hash#digest() has already been called")}function O(t,e){s(t);let r=e.outputLen;if(t.length<r)throw new Error("digestInto() expects output buffer of length at least "+r)}function I(t){return new Uint32Array(t.buffer,t.byteOffset,Math.floor(t.byteLength/4))}function C(t){return new DataView(t.buffer,t.byteOffset,t.byteLength)}function D(t,e){return t<<32-e|t>>>e}var F=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;function b(t){return t<<24&4278190080|t<<8&16711680|t>>>8&65280|t>>>24&255}function H(t){for(let e=0;e<t.length;e++)t[e]=b(t[e])}function h(t){if(typeof t!="string")throw new Error("utf8ToBytes expected string, got "+typeof t);return new Uint8Array(new TextEncoder().encode(t))}function w(t){return typeof t=="string"&&(t=h(t)),s(t),t}function R(...t){let e=0;for(let n=0;n<t.length;n++){let o=t[n];s(o),e+=o.length}let r=new Uint8Array(e);for(let n=0,o=0;n<t.length;n++){let p=t[n];r.set(p,o),o+=p.length}return r}var g=class{clone(){return this._cloneInto()}};function W(t){let e=n=>t().update(w(n)).digest(),r=t();return e.outputLen=r.outputLen,e.blockLen=r.blockLen,e.create=()=>t(),e}function v(t){let e=(n,o)=>t(o).update(w(n)).digest(),r=t({});return e.outputLen=r.outputLen,e.blockLen=r.blockLen,e.create=n=>t(n),e}function M(t=32){if(i&&typeof i.getRandomValues=="function")return i.getRandomValues(new Uint8Array(t));if(i&&typeof i.randomBytes=="function")return i.randomBytes(t);throw new Error("crypto.getRandomValues must be defined")}export{d as a,s as b,B as c,U as d,O as e,I as f,C as g,D as h,F as i,H as j,w as k,R as l,g as m,W as n,v as o,M as p};
/*! Bundled license information:

@noble/hashes/esm/utils.js:
  (*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) *)
*/
