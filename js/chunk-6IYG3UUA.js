var c=typeof globalThis=="object"&&"crypto"in globalThis?globalThis.crypto:void 0;function d(t){return t instanceof Uint8Array||ArrayBuffer.isView(t)&&t.constructor.name==="Uint8Array"}function s(t){if(!Number.isSafeInteger(t)||t<0)throw new Error("positive integer expected, got "+t)}function f(t,...e){if(!d(t))throw new Error("Uint8Array expected");if(e.length>0&&!e.includes(t.length))throw new Error("Uint8Array expected of length "+e+", got length="+t.length)}function U(t){if(typeof t!="function"||typeof t.create!="function")throw new Error("Hash should be wrapped by utils.createHasher");s(t.outputLen),s(t.blockLen)}function E(t,e=!0){if(t.destroyed)throw new Error("Hash instance has been destroyed");if(e&&t.finished)throw new Error("Hash#digest() has already been called")}function S(t,e){f(t);let n=e.outputLen;if(t.length<n)throw new Error("digestInto() expects output buffer of length at least "+n)}function T(t){return new Uint32Array(t.buffer,t.byteOffset,Math.floor(t.byteLength/4))}function O(...t){for(let e=0;e<t.length;e++)t[e].fill(0)}function _(t){return new DataView(t.buffer,t.byteOffset,t.byteLength)}function k(t,e){return t<<32-e|t>>>e}var y=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;function g(t){return t<<24&4278190080|t<<8&16711680|t>>>8&65280|t>>>24&255}function w(t){for(let e=0;e<t.length;e++)t[e]=g(t[e]);return t}var I=y?t=>t:w,h=typeof Uint8Array.from([]).toHex=="function"&&typeof Uint8Array.fromHex=="function",b=Array.from({length:256},(t,e)=>e.toString(16).padStart(2,"0"));function V(t){if(f(t),h)return t.toHex();let e="";for(let n=0;n<t.length;n++)e+=b[t[n]];return e}function m(t){if(typeof t!="string")throw new Error("string expected");return new Uint8Array(new TextEncoder().encode(t))}function A(t){return typeof t=="string"&&(t=m(t)),f(t),t}function j(...t){let e=0;for(let r=0;r<t.length;r++){let o=t[r];f(o),e+=o.length}let n=new Uint8Array(e);for(let r=0,o=0;r<t.length;r++){let i=t[r];n.set(i,o),o+=i.length}return n}var p=class{};function N(t){let e=r=>t().update(A(r)).digest(),n=t();return e.outputLen=n.outputLen,e.blockLen=n.blockLen,e.create=()=>t(),e}function D(t=32){if(c&&typeof c.getRandomValues=="function")return c.getRandomValues(new Uint8Array(t));if(c&&typeof c.randomBytes=="function")return Uint8Array.from(c.randomBytes(t));throw new Error("crypto.getRandomValues must be defined")}var u=BigInt(4294967295),a=BigInt(32);function L(t,e=!1){return e?{h:Number(t&u),l:Number(t>>a&u)}:{h:Number(t>>a&u)|0,l:Number(t&u)|0}}function R(t,e=!1){let n=t.length,r=new Uint32Array(n),o=new Uint32Array(n);for(let i=0;i<n;i++){let{h:l,l:x}=L(t[i],e);[r[i],o[i]]=[l,x]}return[r,o]}var C=(t,e,n)=>t<<n|e>>>32-n,M=(t,e,n)=>e<<n|t>>>32-n,W=(t,e,n)=>e<<n-32|t>>>64-n,X=(t,e,n)=>t<<n-32|e>>>64-n;export{R as a,C as b,M as c,W as d,X as e,s as f,f as g,U as h,E as i,S as j,T as k,O as l,_ as m,k as n,I as o,V as p,A as q,j as r,p as s,N as t,D as u};
/*! Bundled license information:

@noble/hashes/esm/utils.js:
  (*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) *)
*/
