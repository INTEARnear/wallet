diff --git a/Cargo.toml b/Cargo.toml
index bcbda8a..ce79aba 100644
--- a/Cargo.toml
+++ b/Cargo.toml
@@ -131,6 +131,7 @@ ssr = [
     "server_fn/ssr",
     "hydration",
     "tachys/ssr",
+    "leptos_config",
 ]
 trace-component-props = [
     "leptos_macro/trace-component-props",
@@ -195,6 +196,7 @@ default-features = true
 
 [dependencies.leptos_config]
 version = "0.8.7"
+optional = true
 
 [dependencies.leptos_dom]
 version = "0.8.6"
diff --git a/Cargo.toml.orig b/Cargo.toml.orig
index 0fb881d..97c453e 100644
--- a/Cargo.toml.orig
+++ b/Cargo.toml.orig
@@ -23,7 +23,7 @@ leptos_dom = { workspace = true }
 leptos_hot_reload = { workspace = true }
 leptos_macro = { workspace = true }
 leptos_server = { workspace = true, features = ["tachys"] }
-leptos_config = { workspace = true }
+leptos_config = { workspace = true, optional = true }
 leptos-spin-macro = { optional = true, workspace = true, default-features = true }
 oco_ref = { workspace = true }
 or_poisoned = { workspace = true }
@@ -82,6 +82,7 @@ ssr = [
   "server_fn/ssr",
   "hydration",
   "tachys/ssr",
+  "leptos_config",
 ]
 nightly = ["leptos_macro/nightly", "reactive_graph/nightly", "tachys/nightly"]
 rkyv = ["server_fn/rkyv", "leptos_server/rkyv"]
diff --git a/src/hydration/mod.rs b/src/hydration/mod.rs
index 6072145..11f811d 100644
--- a/src/hydration/mod.rs
+++ b/src/hydration/mod.rs
@@ -1,7 +1,6 @@
 #![allow(clippy::needless_lifetimes)]
 
 use crate::{prelude::*, WasmSplitManifest};
-use leptos_config::LeptosOptions;
 use leptos_macro::{component, view};
 use std::{path::PathBuf, sync::OnceLock};
 
@@ -14,7 +13,7 @@ pub fn AutoReload(
     #[prop(optional)]
     disable_watch: bool,
     /// Configuration options for this project.
-    options: LeptosOptions,
+    options: leptos_config::LeptosOptions,
 ) -> impl IntoView {
     (!disable_watch && std::env::var("LEPTOS_WATCH").is_ok()).then(|| {
         #[cfg(feature = "nonce")]
@@ -47,7 +46,7 @@ pub fn AutoReload(
 #[component]
 pub fn HydrationScripts(
     /// Configuration options for this project.
-    options: LeptosOptions,
+    options: leptos_config::LeptosOptions,
     /// Should be `true` to hydrate in `islands` mode.
     #[prop(optional)]
     islands: bool,
diff --git a/src/lib.rs b/src/lib.rs
index bf153c0..09836d0 100644
--- a/src/lib.rs
+++ b/src/lib.rs
@@ -161,10 +161,31 @@ pub mod prelude {
         pub use crate::nonce::*;
         pub use crate::{
             callback::*, children::*, component::*, control_flow::*, error::*,
-            form::*, hydration::*, into_view::*, mount::*, suspense::*,
+            form::*, into_view::*, mount::*, suspense::*,
             text_prop::*,
         };
+        #[cfg(feature = "ssr")]
+        pub use crate::hydration::*;
+        #[cfg(feature = "ssr")]
         pub use leptos_config::*;
+        #[cfg(not(feature = "ssr"))]
+        #[non_exhaustive]
+        #[allow(missing_docs)]
+        /// Fake LeptosOptions for client-only builds that don't want to depend
+        /// on leptos_config which brings regex
+        pub struct LeptosOptions {
+            pub output_name: std::sync::Arc<str>,
+            pub site_root: std::sync::Arc<str>,
+            pub site_pkg_dir: std::sync::Arc<str>,
+            pub reload_port: u32,
+            pub reload_external_port: Option<u32>,
+            pub not_found_path: std::sync::Arc<str>,
+            pub hash_file: std::sync::Arc<str>,
+            pub hash_files: bool,
+            pub server_fn_prefix: Option<String>,
+            pub disable_server_fn_hash: bool,
+            pub server_fn_mod_path: bool,
+        }
         pub use leptos_dom::helpers::*;
         pub use leptos_macro::*;
         pub use leptos_server::*;
@@ -226,6 +247,7 @@ mod show;
 pub mod portal;
 
 /// Components to enable server-side rendering and client-side hydration.
+#[cfg(feature = "ssr")]
 pub mod hydration;
 
 /// Utilities for exporting nonces to be used for a Content Security Policy.
@@ -259,6 +281,7 @@ mod provider;
 pub use tachys;
 /// Tools to mount an application to the DOM, or to hydrate it from server-rendered HTML.
 pub mod mount;
+#[cfg(feature = "ssr")]
 #[doc(inline)]
 pub use leptos_config as config;
 #[doc(inline)]
diff --git a/src/text_prop.rs b/src/text_prop.rs
index dc13c89..80d2cd4 100644
--- a/src/text_prop.rs
+++ b/src/text_prop.rs
@@ -83,6 +83,7 @@ impl IntoAttributeValue for TextProp {
     }
 }
 
+#[allow(unused_macros)]
 macro_rules! textprop_reactive {
     ($name:ident, <$($gen:ident),*>, $v:ty, $( $where_clause:tt )*) =>
     {
